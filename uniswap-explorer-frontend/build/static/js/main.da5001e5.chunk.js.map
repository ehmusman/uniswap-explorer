{"version":3,"sources":["components/view.js/navbar/Navbar.js","context/contract/contractEventsContext.js","components/view.js/home/Event.js","components/view.js/home/Home.js","components/hooks/useWalletHandler.js","components/hooks/useContractEventsHandles.js","App.js","context/types.js","context/contract/contractEventsReducer.js","context/contract/contractEventsState.js","config.js","index.js"],"names":["Navbar","className","href","type","GithubContext","createContext","Event","block","hash","chainId","args","event","target","rel","length","toString","parseInt","hex","Home","useContext","ContractEventsContext","getAddress","disconnectWallet","updateChain","updateBlock","provider","ethers","providers","Web3Provider","window","ethereum","connectWalletHandler","isMetaMask","getNetwork","network","includes","toast","error","getBlockNumber","currentBlock","request","method","then","result","success","catch","console","log","chainChangedHandler","on","useConnectWallet","useWalletDisconnect","disconnect","address","selectedChain","getEvents","count","loading","eventsError","gettingEvents","useGetEvents","events","onClick","map","i","blockNumber","transactionHash","App","CLEAR_EVENTS","GET_EVENTS","GET_EVENTS_START","GET_EVENTS_ERROR","GET_WALLET_ADDRESS","DISCONNECT_WALLET","UPDATE_CURRENT_BLOCK","UPDATE_SELECTED_CHAIN","ContractEventsReducer","state","action","eventsGettingCount","payload","ContractEventsState","props","useReducer","addressError","dispatch","id","updateCurrentBlock","getEventsOfUniswapRopsten","chain","axios","get","data","Provider","value","clearEvents","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da5001e5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <div className='container'>\n                <a className=\"navbar-brand\" href=\"#\">Uniswap Explorer</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar","import { createContext } from \"react\";\n\nconst GithubContext = createContext();\n\nexport default GithubContext;","import React from 'react'\nconst Event = ({ block, hash, chainId, args, event }) => {\n  return (\n    <>\n      <div className=\"card w-100 my-1\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">Block # \n          <a href={`https://${chainId === 1 ? \"\" : \"ropsten.\"}etherscan.io/block/${block}`}>\n          {block}\n          </a>\n          </h5>\n          <p className=\"card-title\">Event:  {event}</p>\n          <p className=\"card-title\">From:\n            <a\n              target=\"_blank\" rel=\"noreferrer\"\n              href={`https://${chainId === 1 ? \"\" : \"ropsten.\"}etherscan.io/address/${args?.length && args[0]?.toString()}`}>{args?.length && args[0]?.toString()}</a>\n          </p>\n          <p className=\"card-title\">To:\n            <a\n              target=\"_blank\" rel=\"noreferrer\"\n              href={`https://${chainId === 1 ? \"\" : \"ropsten.\"}etherscan.io/address/${args?.length && args[5]?.toString()}`}>{args?.length && args[5]?.toString()}</a>\n          </p>\n          <p className=\"card-title\">Amount0In:  {parseInt(args?.length && args[1]?.hex, 16)}</p>\n          <p className=\"card-title\">Amount1In:  {parseInt(args?.length && args[2]?.hex, 16)}</p>\n          <p className=\"card-title\">Amount0Out:  {parseInt(args?.length && args[3]?.hex, 16)}</p>\n          <p className=\"card-title\">Amount1Out:  {parseInt(args?.length && args[4]?.hex, 16)}</p>\n          <p className='card-text'>\n            Transaction Hash:\n            <a className=\"card-text\"\n              href={`https://${chainId === 1 ? \"\" : \"ropsten.\"}etherscan.io/tx/${hash}`}\n              target=\"_blank\" rel=\"noreferrer\"\n            >{hash}</a>\n          </p>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Event","import React from \"react\";\nimport {\n  useConnectWallet,\n  useWalletDisconnect,\n  useGetWalletAddress,\n  useGetCurrentChainId,\n} from \"../../hooks/useWalletHandler\";\nimport {\n  useGetCurrentBlock,\n  useGetEvents,\n  useEvents,\n} from \"../../hooks/useContractEventsHandles\";\nimport Event from \"./Event\";\n\nconst Home = () => {\n  const [connectWalletHandler] = useConnectWallet();\n  const [disconnect] = useWalletDisconnect();\n  const [address] = useGetWalletAddress();\n  const [chainId] = useGetCurrentChainId();\n  const [block] = useGetCurrentBlock();\n  const [loading, eventsError, gettingEvents] = useGetEvents();\n  const [events] = useEvents();\n  return (\n    <div className=\"container\">\n      <button\n        onClick={address ? disconnect : connectWalletHandler}\n        className=\"btn btn-dark btn-lg mt-1\"\n      >\n        {address ? \"Logout\" : \"Connect Wallet\"}\n      </button>\n\n      {events ? (\n        <>\n          {events.map((event, i) => (\n            <Event\n              key={i}\n              block={event.blockNumber}\n              hash={event.transactionHash}\n              chainId={chainId}\n              args={event.args}\n              event={event.event}\n            />\n          ))}\n        </>\n      ) : null}\n      <div className=\"d-flex align-items-center justify-content-center\">\n        {!loading && address && chainId && block ? (\n          <button\n            className=\" mt-2 btn btn-primary btn-lg d-block w-25\"\n            onClick={gettingEvents}\n          >\n            {events.length ? \"Load More Events\" : \"Get Events\"}\n          </button>\n        ) : null}\n        {loading && !eventsError ? (\n          <h1>\n            <i className=\"fas fa-spinner fa-5x fa-spin\"></i>\n          </h1>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useContext } from \"react\"\nimport ContractEventsContext from \"../../context/contract/contractEventsContext\"\nimport { toast } from \"react-toastify\"\nimport { ethers } from 'ethers'\n\n// custome Hook to Connect with Wallet\nexport const useConnectWallet = () => {\n  const { getAddress, disconnectWallet, updateChain , updateBlock} = useContext(ContractEventsContext)\n  const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n  const connectWalletHandler = async () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      const network = await provider.getNetwork()\n      const chainId = network.chainId\n      if (![1, 3].includes(chainId)) {\n        toast.error(\"Please Select Ropsten or Mainnet of Ethereum\")\n        return\n      }\n      updateChain(chainId)\n      const currentBlock = await provider.getBlockNumber()\n      updateBlock(currentBlock)\n      window.ethereum.request({ method: 'eth_requestAccounts' })\n        .then(result => {\n          getAddress(result[0]);\n          toast.success('Wallet is Connected')\n        })\n        .catch(error => {\n          console.log(\"error\", error)\n        });\n\n    } else {\n      toast.error(\"Please Install Matamask\")\n    }\n  }\n// Function to catch events on changing chain\n  const chainChangedHandler = async () => {\n    // window.location.reload();\n    const network = await provider.getNetwork()\n    const chainId = network.chainId\n    if (![1, 3].includes(chainId)) {\n      toast.error(\"Please Select Ropsten or Mainnet of Ethereum\")\n      disconnectWallet()\n      return\n    }\n    updateChain(chainId)\n  }\n  window?.ethereum?.on('chainChanged', chainChangedHandler);\n  return [connectWalletHandler]\n}\n\n// custome Hook to Disconnect Wallet From DAPP\nexport const useWalletDisconnect = () => {\n  const { disconnectWallet } = useContext(ContractEventsContext)\n  const disconnect = () => {\n    disconnectWallet()\n    toast.success(\"Wallet is Disconnected\")\n  }\n  return [disconnect]\n}\n\n// custome Hook to get current connected Wallet Address\nexport const useGetWalletAddress = () => {\n  const { address } = useContext(ContractEventsContext)\n  return [address]\n}\n\n// custome Hook to get current chain Id\nexport const useGetCurrentChainId = () => {\n  const { selectedChain } = useContext(ContractEventsContext)\n  const chainId = selectedChain\n  return [chainId ]\n}","import { useContext } from \"react\"\nimport ContractEventsContext from \"../../context/contract/contractEventsContext\"\n\n// custome Hook to get current Block save in globas state\nexport const useGetCurrentBlock = () => {\nconst { currentBlock : block} = useContext(ContractEventsContext)\n  return [block]\n}\n\n// custome Hook to get Events from Backend and storing in global state\nexport const useGetEvents = () => {\n    const { currentBlock : block, getEvents, count, loading, eventsError, selectedChain} = useContext(ContractEventsContext)\n    const gettingEvents = async () => {\n        getEvents(block-1000*count, selectedChain)\n    }\n      return [loading, eventsError, gettingEvents]\n}\n\n// custome Hook to use events stored in global state\nexport const useEvents = () => {\n    const { events} = useContext(ContractEventsContext)\n      return [events]\n}","import React from \"react\"\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Navbar from \"./components/view.js/navbar/Navbar\";\nimport Home from \"./components/view.js/home/Home\";\nfunction App() {\n  return (\n    <div>\n      {/* Component for toaster Messages */}\n      <ToastContainer/>\n      <Navbar />\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","export const CLEAR_EVENTS=\"CLEAR_EVENTS\"\nexport const GET_EVENTS=\"GET_EVENTS\"\nexport const GET_EVENTS_START=\"GET_EVENTS_START\"\nexport const GET_EVENTS_ERROR=\"GET_EVENTS_ERROR\"\nexport const GET_EVENTS_LOADING=\"GET_EVENTS_LOADING\"\nexport const GET_WALLET_ADDRESS=\"GET_WALLET_ADDRESS\"\nexport const DISCONNECT_WALLET=\"DISCONNECT_WALLET\"\nexport const UPDATE_CURRENT_BLOCK=\"UPDATE_CURRENT_BLOCK\"\nexport const UPDATE_SELECTED_CHAIN=\"UPDATE_SELECTED_CHAIN\"\n","import {\n    CLEAR_EVENTS,\n    GET_EVENTS,\n    GET_EVENTS_ERROR,\n    GET_EVENTS_START,\n    GET_WALLET_ADDRESS,\n    DISCONNECT_WALLET,\n    UPDATE_CURRENT_BLOCK,\n    UPDATE_SELECTED_CHAIN\n} from '../types'\n\n// Reducer Function \nconst ContractEventsReducer = (state, action) => {\n    switch (action.type) {\n        // before getting events\n        case GET_EVENTS_START:\n            return {\n                ...state,\n                loading: true\n            };\n        // adding new events in existing events state\n        case GET_EVENTS:\n            return {\n                ...state,\n                loading: false,\n                eventsGettingCount: state.eventsGettingCount+1,\n                events: [...state.events, ...action.payload],\n            };\n        // storing Errors while Getting events from DB\n        case GET_EVENTS_ERROR:\n            return {\n                ...state,\n                loading: false,\n                eventsError: action.payload,\n            };\n        // Clear All events when logging OFF or changing current chain\n        case CLEAR_EVENTS:\n            return {\n                ...state,\n                events: [],\n                eventsError: action.payload\n            }\n        // Storing Wallet Address in state\n        case GET_WALLET_ADDRESS:\n            return {\n                ...state,\n                address: action.payload\n            }\n        // Removing all events and wallet address while disconnecting wallet\n        case DISCONNECT_WALLET:\n            return {\n              ...state,\n              address: \"\",\n              events: [],\n              currentBlock:0,\n             };\n        // updating current block number on every reload\n        case UPDATE_CURRENT_BLOCK:\n            return {\n                ...state,\n                currentBlock: action.payload\n            }\n        // updating chain number while login and or chainging current chain\n        case UPDATE_SELECTED_CHAIN:\n            return{\n                ...state,\n                selectedChain: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default ContractEventsReducer;","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContractEventsContext from './contractEventsContext';\nimport ContractEventsReducer from './contractEventsReducer'\nimport {BACKEND_API_URL} from \"../../config\"\nimport {\n    CLEAR_EVENTS,\n    GET_EVENTS,\n    GET_EVENTS_ERROR,\n    GET_EVENTS_START,\n    GET_WALLET_ADDRESS,\n    DISCONNECT_WALLET,\n    UPDATE_CURRENT_BLOCK,\n    UPDATE_SELECTED_CHAIN\n} from '../types'\nimport { toast } from 'react-toastify';\n\nconst ContractEventsState = (props) => {\n    // global state variables\n    const initialState = {\n        events: [],\n        address: \"\",\n        loading: false,\n        eventsError: null,\n        addressError: null,\n        currentBlock: 0,\n        selectedChain: 0,\n        eventsGettingCount: 0\n    }\n    // creating global state using useReducer Hook\n    const [state, dispatch] = useReducer(ContractEventsReducer, initialState)\n\n    // Get Wallet Address\n    const getAddress = async (address) => {\n        dispatch({\n            type: GET_WALLET_ADDRESS,\n            payload: address\n        })\n    }\n    // Disconnect Wallet\n    const disconnectWallet = async () => {\n        dispatch({\n            type: DISCONNECT_WALLET,\n        })\n    }\n\n    // Update chain id on new connection or during changing chain\n    const updateChain = async (id) => {\n        dispatch({\n            type: UPDATE_SELECTED_CHAIN,\n            payload: id\n        })\n    }\n    // update current block\n    const updateCurrentBlock = async (block) => {\n        dispatch({\n            type: UPDATE_CURRENT_BLOCK,\n            payload: block\n        })\n    }\n    // Getting Past events one by one from backend\n    const getEventsOfUniswapRopsten = async (block, chain) => {\n        try {\n            dispatch({type: GET_EVENTS_START})\n            const {data} = await axios.get(`${BACKEND_API_URL}/get/${chain === 1? \"mainnet\":\"ropsten\"}/data?fromBlock=${block}`)\n            dispatch({\n                type: GET_EVENTS,\n                payload: data\n            })\n            toast.success(data.length + \" More Events Are Added\")\n        } catch (error) {\n            dispatch({type: GET_EVENTS_ERROR, payload: error})\n        }\n    }\n    // Clear Events on Logout\n    const clearEvents = () => dispatch({\n        type: CLEAR_EVENTS\n    })\n\n    // Passing global state and handler functions to all the childern\n    return <ContractEventsContext.Provider\n        value={{\n            events: state.events,\n            address: state.address,\n            loading: state.loading,\n            eventsError: state.eventsError,\n            addressError: state.addressError,\n            currentBlock: state.currentBlock,\n            selectedChain: state.selectedChain,\n            count: state.eventsGettingCount,\n            clearEvents,\n            getAddress,\n            disconnectWallet,\n            getEvents: getEventsOfUniswapRopsten,\n            updateChain,\n            updateBlock: updateCurrentBlock\n        }}>\n        {props.children}\n    </ContractEventsContext.Provider>\n\n}\n\nexport default ContractEventsState;","export const BACKEND_API_URL =\"http://165.227.195.188:5000/api\" \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ContractEventsState from './context/contract/contractEventsState';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContractEventsState>\n      <App />\n    </ContractEventsState>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}